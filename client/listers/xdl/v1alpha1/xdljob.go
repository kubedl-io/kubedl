/*
Copyright 2019 The Alibaba Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/alibaba/kubedl/api/xdl/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// XDLJobLister helps list XDLJobs.
type XDLJobLister interface {
	// List lists all XDLJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.XDLJob, err error)
	// XDLJobs returns an object that can list and get XDLJobs.
	XDLJobs(namespace string) XDLJobNamespaceLister
	XDLJobListerExpansion
}

// xDLJobLister implements the XDLJobLister interface.
type xDLJobLister struct {
	indexer cache.Indexer
}

// NewXDLJobLister returns a new XDLJobLister.
func NewXDLJobLister(indexer cache.Indexer) XDLJobLister {
	return &xDLJobLister{indexer: indexer}
}

// List lists all XDLJobs in the indexer.
func (s *xDLJobLister) List(selector labels.Selector) (ret []*v1alpha1.XDLJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.XDLJob))
	})
	return ret, err
}

// XDLJobs returns an object that can list and get XDLJobs.
func (s *xDLJobLister) XDLJobs(namespace string) XDLJobNamespaceLister {
	return xDLJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// XDLJobNamespaceLister helps list and get XDLJobs.
type XDLJobNamespaceLister interface {
	// List lists all XDLJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.XDLJob, err error)
	// Get retrieves the XDLJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.XDLJob, error)
	XDLJobNamespaceListerExpansion
}

// xDLJobNamespaceLister implements the XDLJobNamespaceLister
// interface.
type xDLJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all XDLJobs in the indexer for a given namespace.
func (s xDLJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.XDLJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.XDLJob))
	})
	return ret, err
}

// Get retrieves the XDLJob from the indexer for a given namespace and name.
func (s xDLJobNamespaceLister) Get(name string) (*v1alpha1.XDLJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("xdljob"), name)
	}
	return obj.(*v1alpha1.XDLJob), nil
}
